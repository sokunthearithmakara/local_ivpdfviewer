{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * PDF viewer\n *\n * @module     local_ivpdfviewer/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Iframe from 'ivplugin_iframe/main';\nexport default class PdfViewer extends Iframe {\n    /**\n     * Renders the container for the given annotation.\n     *\n     * @param {Object} annotation - The annotation object.\n     * @param {string} annotation.id - The ID of the annotation.\n     */\n    renderContainer(annotation) {\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        $message.addClass(\"hasiframe\");\n        super.renderContainer(annotation);\n    }\n\n    /**\n     * Renders the content for the given annotation.\n     * @param {Object} annotation - The annotation object.\n     * @returns {Promise} - The promise object representing the content rendering.\n     */\n    async applyContent(annotation) {\n        let self = this;\n        /**\n         * Monitors a PDF viewer within an iframe and toggles completion status based on the number of pages viewed.\n         *\n         * @param {Object} annotation - The annotation object containing the ID and completion status.\n         * @returns {void}\n         */\n        const pdfCheck = (annotation) => {\n            const checkIframe = () => {\n                const iframe = document.querySelector(`#message[data-id='${annotation.id}'] iframe`);\n                let pdf;\n                try {\n                    pdf = iframe.contentWindow.PDFViewerApplication.pdfViewer;\n                } catch (e) {\n                    pdf = null;\n                }\n                if (pdf && pdf.pagesCount > 0) {\n                    if (pdf.pagesCount === 1 || pdf._pages.length === 1) { // Only one page.\n                        self.toggleCompletion(annotation.id, \"mark-done\", \"automatic\");\n                    } else {\n                        pdf.eventBus.on(\"pagechanging\", function(e) {\n                            if (e.pageNumber == pdf.pagesCount && !annotation.completed) {\n                                self.toggleCompletion(annotation.id, \"mark-done\", \"automatic\");\n                                annotation.completed = true;\n                            }\n                        });\n                    }\n                } else {\n                    requestAnimationFrame(checkIframe);\n                }\n            };\n            requestAnimationFrame(checkIframe);\n        };\n\n        const data = await this.render(annotation, 'html');\n        $(`#message[data-id='${annotation.id}'] .modal-body`).attr('id', 'content').html(data).fadeIn(300);\n        this.postContentRender(annotation);\n        if (annotation.hascompletion == 0 || annotation.completed) {\n            return;\n        }\n        if (annotation.completiontracking == 'view') {\n            this.toggleCompletion(annotation.id, \"mark-done\", \"automatic\");\n            return;\n        }\n        if (annotation.completiontracking == 'scrolltolastpage') {\n            pdfCheck(annotation);\n        }\n    }\n}"],"names":["PdfViewer","Iframe","renderContainer","annotation","id","addClass","self","this","data","render","attr","html","fadeIn","postContentRender","hascompletion","completed","completiontracking","checkIframe","iframe","document","querySelector","pdf","contentWindow","PDFViewerApplication","pdfViewer","e","pagesCount","_pages","length","toggleCompletion","eventBus","on","pageNumber","requestAnimationFrame","pdfCheck"],"mappings":";;;;;;;uKAwBqBA,kBAAkBC,cAOnCC,gBAAgBC,aACG,+CAAuBA,WAAWC,UACxCC,SAAS,mBACZH,gBAAgBC,+BAQPA,gBACXG,KAAOC,WAkCLC,WAAaD,KAAKE,OAAON,WAAY,wDACpBA,WAAWC,sBAAoBM,KAAK,KAAM,WAAWC,KAAKH,MAAMI,OAAO,UACzFC,kBAAkBV,YACS,GAA5BA,WAAWW,eAAsBX,WAAWY,YAGX,QAAjCZ,WAAWa,mBAIsB,oBAAjCb,WAAWa,oBArCGb,CAAAA,mBACRc,YAAc,WACVC,OAASC,SAASC,0CAAmCjB,WAAWC,qBAClEiB,QAEAA,IAAMH,OAAOI,cAAcC,qBAAqBC,UAClD,MAAOC,GACLJ,IAAM,KAENA,KAAOA,IAAIK,WAAa,EACD,IAAnBL,IAAIK,YAA0C,IAAtBL,IAAIM,OAAOC,OACnCtB,KAAKuB,iBAAiB1B,WAAWC,GAAI,YAAa,aAElDiB,IAAIS,SAASC,GAAG,gBAAgB,SAASN,GACjCA,EAAEO,YAAcX,IAAIK,YAAevB,WAAWY,YAC9CT,KAAKuB,iBAAiB1B,WAAWC,GAAI,YAAa,aAClDD,WAAWY,WAAY,MAKnCkB,sBAAsBhB,cAG9BgB,sBAAsBhB,cActBiB,CAAS/B,iBAJJ0B,iBAAiB1B,WAAWC,GAAI,YAAa"}